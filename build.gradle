ext {
  interlokCoreVersion = project.hasProperty('interlokCoreVersion') ? project.getProperty('interlokCoreVersion') : '3.8-SNAPSHOT'
  releaseVersion = project.hasProperty('releaseVersion') ? project.getProperty('releaseVersion') : '3.8-SNAPSHOT'
  mavenPublishUrl = project.hasProperty('mavenPublishUrl') ? project.getProperty('mavenPublishUrl') : 'https://development.adaptris.net/nexus/content/repositories/snapshots'
  repoUsername = project.hasProperty('repoUsername') ? project.getProperty('repoUsername') : 'unknown'
  repoPassword = project.hasProperty('repoPassword') ? project.getProperty('repoPassword') : 'unknown'
  defaultNexusRepo = project.hasProperty('defaultNexusRepo') ? project.getProperty('defaultNexusRepo') : 'https://repo1.maven.org/maven2/'
  javadocsBaseUrl = "https://development.adaptris.net/nexus/content/sites/javadocs/com/adaptris"
  interlokJavadocs= project.hasProperty('interlokJavadocs') ? project.getProperty('interlokJavadocs') : javadocsBaseUrl + "/interlok-core/" + interlokCoreVersion
  interlokCommonJavadocs= project.hasProperty('interlokJavadocs') ? project.getProperty('interlokJavadocs') : javadocsBaseUrl + "/interlok-common/" + interlokCoreVersion

  slf4jVersion = '1.7.25'
  awsSDKVersion = '1.11.149'
}

if (JavaVersion.current().isJava8Compatible()) {
  allprojects {
    tasks.withType(Javadoc) {
      options.addStringOption('Xdoclint:none', '-quiet')
    }
  }
}


subprojects {
  // Apply the java plugin to add support for Java
  apply plugin: 'java'
  apply plugin: 'maven'
  apply plugin: 'maven-publish'
  apply plugin: "jacoco"

  sourceCompatibility = 1.8
  group   = 'com.adaptris'
  version = releaseVersion
  def versionDir = "$buildDir/version"

  // In this section you declare where to find the dependencies of your project
  repositories {
    maven {	url "$defaultNexusRepo" }
    maven { url "https://development.adaptris.net/nexus/content/groups/public" }
    maven {
      credentials {
        username repoUsername
        password repoPassword
      }
      url "https://development.adaptris.net/nexus/content/groups/private"
    }
    maven { url "https://development.adaptris.net/nexus/content/repositories/snapshots" }
    maven { url "https://development.adaptris.net/nexus/content/repositories/releases" }
  }

  configurations {
    javadoc {}
    all*.exclude group: 'c3p0'
    all*.exclude group: 'commons-logging'
  }

  configurations.all {
    resolutionStrategy.cacheChangingModulesFor 0, 'seconds'
  }

  // In this section you declare the dependencies for your production and test code
  dependencies {
      compile ("com.adaptris:interlok-core:$interlokCoreVersion") { changing= true}
      compile ("com.adaptris:interlok-core-apt:$interlokCoreVersion") { changing= true}
      compile ("org.slf4j:slf4j-api:$slf4jVersion")

      testCompile ('junit:junit:4.12')
      testCompile ("com.adaptris:interlok-stubs:$interlokCoreVersion") { changing= true}
      testCompile ('log4j:log4j:1.2.17-atlassian-2-19d553e')
      testCompile ("org.slf4j:slf4j-log4j12:$slf4jVersion")
      testCompile ("org.slf4j:jcl-over-slf4j:$slf4jVersion")

      javadoc("com.adaptris:interlok-core-apt:$interlokCoreVersion") { changing= true}
  }

  javadoc {
    configure(options) {
      links = [
        interlokJavadocs,
        interlokCommonJavadocs,
      ]
      taglets = ["com.adaptris.taglet.ConfigTaglet", "com.adaptris.taglet.LicenseTaglet"]
      options.addStringOption "tagletpath", configurations.javadoc.asPath
    }
  }

  jacoco {
    toolVersion="0.8.0"
  }

  jacocoTestReport {
      reports {
          xml.enabled true
          html.enabled true
      }
  }

  check.dependsOn jacocoTestReport

  sourceSets {
    main {
      output.dir(versionDir, builtBy: 'generateVersion')
    }
  }

  // Generate the META-INF/adaptris-version file
  task generateVersion {
    doLast {
      def versionFile = new File(new File(versionDir, 'META-INF'), 'adaptris-version')
      versionFile.getParentFile().mkdirs()
      ant.propertyfile(file: versionFile) {
        entry(key: 'component.name', value: componentName)
        entry(key: 'build.version', value: releaseVersion)
        entry(key: 'groupId', value: "com.adaptris")
        entry(key: 'artifactId', value: project.name)
        entry(key: 'build.date', value: new Date().format('yyyy-MM-dd'))
      }
    }
  }

}
